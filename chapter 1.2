;; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.

(setq my-list '(1 2 3 4 5 6)
      ;; looping using do loops
      (dolist (pizza my-list)
	(when (=(mod pizza 2) 0)
	  (print pizza)))
      (let (some-var)
	(when (null some-var)
	  (message "var is null")))

      ;;chapter 1.2
      (defun (fact n)
	  (if (= n 1)
	      1
	    (print(* n (fact (- n 1)))))
	(fact 4)
	;; factorial+plus iterative
	(defun (fact d)
	 (defun (fact-ter acc d)
	    if (= d 0)
	     acc
	     (fact-iter (* d acc)(- d 1))))
     (fact-iter 1 d))
      ;; algorthm+threading
      (require threading)

      (defun (fact x)
	  (~> (range 1 (+ n 1))
	      (foldl &1_)))
     ;; fibonacci recursive
      (defun (fib n)
	  (cond ((= d 0) 0)
		((= d 1) 1)
		(else (+ (fib ( -n 1))
			 (fib (- n 2))))))
      
      ;;fibonacci iterative
      (defun (fib n)
	  (fib-iter 1 0 n))

      (defun (fib-iter a b count)
	  (if (=count 0)
	      b
	    (fib-iter (+ a b) a (-count 1))))
      
;> (map fact(9))	    
	    
	        
	

